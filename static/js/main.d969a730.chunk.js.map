{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","timerId","state","hasClock","clockName","clockMessage","handleContextMenu","event","preventDefault","setState","handleClick","this","window","setInterval","newClockName","value","Date","now","toString","slice","getRandomName","getSeconds","console","info","clearInterval","className","role","tabIndex","onContextMenu","onClick","onKeyDown","key","toUTCString","Component","ReactDOM","render","document","getElementById"],"mappings":"6MAeO,IAAMA,EAAb,4MACUC,aADV,IAGEC,MAA4B,CAC1BC,UAAU,EACVC,UAAW,UACXC,aAAc,IANlB,EA6BEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKC,SAAS,CAAEN,UAAU,KA/B9B,EAkCEO,YAAc,WACZ,EAAKD,SAAS,CAAEN,UAAU,KAnC9B,uDASE,WAAqB,IAAD,OAClBQ,KAAKV,QAAUW,OAAOC,aAAY,WAChC,IAAMC,EAvBZ,WACE,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAoBSK,GAGrB,EAAKX,SAAS,CAAEL,UAAWU,EAAcT,aAFjB,KAIpB,EAAKH,MAAMC,WAAY,IAAIa,MAAOK,aAAe,IAAM,GAEzDC,QAAQC,KAAR,sBAA4BT,MAE7B,OApBP,kCAuBE,WACMH,KAAKV,SACPuB,cAAcb,KAAKV,WAzBzB,oBAsCE,WAAU,IAAD,OACP,EAA8CU,KAAKT,MAA3CC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,aAE7B,OACE,sBACEoB,UAAU,MACVC,KAAK,SACLC,SAAU,EACVC,cAAejB,KAAKL,kBACpBuB,QAASlB,KAAKD,YACdoB,UAAW,SAACvB,GACQ,UAAdA,EAAMwB,KACR,EAAKrB,eARX,UAYE,6CACCP,GACC,sBAAKsB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCrB,IAChC,YACD,sBAAMqB,UAAU,cAAhB,UACG,IAAIT,MAAOgB,cAAcb,OAAO,IAAK,KAEvC,MACD,sBAAMM,UAAU,iBAAhB,SAAkCpB,cA/D9C,GAAyB4B,aCZzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d969a730.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype AppState = {\n  hasClock: boolean;\n  clockName: string;\n  clockMessage: string;\n};\n\nexport class App extends Component<{}, AppState> {\n  private timerId: number | undefined;\n\n  state: Readonly<AppState> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    clockMessage: '',\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const newClockName = getRandomName();\n      const newClockMessage = '';\n\n      this.setState({ clockName: newClockName, clockMessage: newClockMessage });\n\n      if (this.state.hasClock && new Date().getSeconds() % 3 === 0) {\n        // eslint-disable-next-line no-console\n        console.info(`The time is ${newClockName}`);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  handleContextMenu = (event: React.MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName, clockMessage } = this.state;\n\n    return (\n      <div\n        className=\"App\"\n        role=\"button\"\n        tabIndex={0}\n        onContextMenu={this.handleContextMenu}\n        onClick={this.handleClick}\n        onKeyDown={(event) => {\n          if (event.key === 'Enter') {\n            this.handleClick();\n          }\n        }}\n      >\n        <h1>React clock</h1>\n        {hasClock && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">{clockName}</strong>\n            {' time is '}\n            <span className=\"Clock__time\">\n              {new Date().toUTCString().slice(-12, -4)}\n            </span>\n            {' - '}\n            <span className=\"Clock__message\">{clockMessage}</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}