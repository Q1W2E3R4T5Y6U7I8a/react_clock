{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","timerId","state","hasClock","clockName","handleContextMenu","event","preventDefault","setState","handleClick","this","window","setInterval","newClockName","value","Date","now","toString","slice","getRandomName","console","info","_","prevState","debug","clearInterval","className","role","tabIndex","onContextMenu","onClick","onKeyDown","key","toUTCString","Component","ReactDOM","render","document","getElementById"],"mappings":"6MAcO,IAAMA,EAAb,4MACUC,aADV,IAGEC,MAA4B,CAC1BC,UAAU,EACVC,UAAW,WALf,EAuCEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKC,SAAS,CAAEL,UAAU,KAzC9B,EA4CEM,YAAc,WACZ,EAAKD,SAAS,CAAEL,UAAU,KA7C9B,uDAQE,WAAqB,IAAD,OAClBO,KAAKT,QAAUU,OAAOC,aAAY,WAChC,IAAMC,EArBZ,WACE,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAkBSK,GAIrBC,QAAQC,KAAR,sBAA4BR,IAExB,EAAKX,MAAMC,UAEbiB,QAAQC,KAAK,gBAIf,EAAKb,SAAS,CAAEJ,UAAWS,MAC1B,OAvBP,gCA0BE,SAAmBS,EAAOC,GACpBA,EAAUnB,YAAcM,KAAKR,MAAME,WAErCgB,QAAQI,MAAR,uBAA8BD,EAAUnB,UAAxC,eAAwDM,KAAKR,MAAME,cA7BzE,kCAiCE,WACMM,KAAKT,SACPwB,cAAcf,KAAKT,WAnCzB,oBAgDE,WAAU,IAAD,OACP,EAAgCS,KAAKR,MAA7BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBACEsB,UAAU,MACVC,KAAK,SACLC,SAAU,EACVC,cAAenB,KAAKL,kBACpByB,QAASpB,KAAKD,YACdsB,UAAW,SAACzB,GACQ,UAAdA,EAAM0B,KACR,EAAKvB,eARX,UAYE,6CACCN,GACC,sBAAKuB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCtB,IAChC,YACD,sBAAMsB,UAAU,cAAhB,UACG,IAAIX,MAAOkB,cAAcf,OAAO,IAAK,eAtEpD,GAAyBgB,aCXzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a8eb4ae9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype AppState = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, AppState> {\n  private timerId: number | undefined;\n\n  state: Readonly<AppState> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const newClockName = getRandomName();\n\n      // Ensure console.info is called every second\n      // eslint-disable-next-line no-console\n      console.info(`The time is ${newClockName}`);\n\n      if (this.state.hasClock) {\n        // eslint-disable-next-line no-console\n        console.info('some message');\n      }\n\n      // Move this line outside the if condition to ensure setState is called every second\n      this.setState({ clockName: newClockName });\n    }, 1000);\n  }\n\n  componentDidUpdate(_: {}, prevState: AppState) {\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  handleContextMenu = (event: React.MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div\n        className=\"App\"\n        role=\"button\"\n        tabIndex={0}\n        onContextMenu={this.handleContextMenu}\n        onClick={this.handleClick}\n        onKeyDown={(event) => {\n          if (event.key === 'Enter') {\n            this.handleClick();\n          }\n        }}\n      >\n        <h1>React clock</h1>\n        {hasClock && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">{clockName}</strong>\n            {' time is '}\n            <span className=\"Clock__time\">\n              {new Date().toUTCString().slice(-12, -4)}\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}