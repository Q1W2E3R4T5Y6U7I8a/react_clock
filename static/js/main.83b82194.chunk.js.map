{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","timerId","state","hasClock","clockName","currentTime","Date","toLocaleTimeString","handleContextMenu","event","preventDefault","setState","handleClick","this","window","setInterval","newClockName","value","now","toString","slice","getRandomName","newCurrentTime","console","info","_","prevState","debug","clearInterval","className","role","tabIndex","onContextMenu","onClick","onKeyDown","key","Component","ReactDOM","render","document","getElementById"],"mappings":"6MAeO,IAAMA,EAAb,4MACUC,aADV,IAGEC,MAA4B,CAC1BC,UAAU,EACVC,UAAW,UACXC,aAAa,IAAIC,MAAOC,sBAN5B,EAuCEC,kBAAoB,SAACC,GACnBA,EAAMC,iBACN,EAAKC,SAAS,CAAER,UAAU,KAzC9B,EA4CES,YAAc,WACZ,EAAKD,SAAS,CAAER,UAAU,KA7C9B,uDASE,WAAqB,IAAD,OAClBU,KAAKZ,QAAUa,OAAOC,aAAY,WAChC,IAAMC,EAvBZ,WACE,IAAMC,EAAQX,KAAKY,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAoBSI,GACfC,GAAiB,IAAIhB,MAAOC,qBAGlCgB,QAAQC,KAAR,sBAA4BR,IAExB,EAAKd,MAAMC,UAEboB,QAAQC,KAAK,gBAGf,EAAKb,SAAS,CAAEP,UAAWY,EAAcX,YAAaiB,MACrD,OAvBP,gCA0BE,SAAmBG,EAAOC,GACpBA,EAAUtB,YAAcS,KAAKX,MAAME,WAErCmB,QAAQI,MAAR,uBAA8BD,EAAUtB,UAAxC,eAAwDS,KAAKX,MAAME,cA7BzE,kCAiCE,WACMS,KAAKZ,SACP2B,cAAcf,KAAKZ,WAnCzB,oBAgDE,WAAU,IAAD,OACP,EAA6CY,KAAKX,MAA1CC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,YAE7B,OACE,sBACEwB,UAAU,MACVC,KAAK,SACLC,SAAU,EACVC,cAAenB,KAAKL,kBACpByB,QAASpB,KAAKD,YACdsB,UAAW,SAACzB,GACQ,UAAdA,EAAM0B,KACR,EAAKvB,eARX,UAYE,6CACCT,GACC,sBAAK0B,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SAAiCzB,IAChC,YACD,sBAAMyB,UAAU,cAAhB,SAA+BxB,cArE3C,GAAyB+B,aCZzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.83b82194.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype AppState = {\n  hasClock: boolean;\n  clockName: string;\n  currentTime: string;\n};\n\nexport class App extends Component<{}, AppState> {\n  private timerId: number | undefined;\n\n  state: Readonly<AppState> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    currentTime: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      const newClockName = getRandomName();\n      const newCurrentTime = new Date().toLocaleTimeString();\n\n      // eslint-disable-next-line no-console\n      console.info(`The time is ${newClockName}`);\n\n      if (this.state.hasClock) {\n        // eslint-disable-next-line no-console\n        console.info('some message');\n      }\n\n      this.setState({ clockName: newClockName, currentTime: newCurrentTime });\n    }, 3000);\n  }\n\n  componentDidUpdate(_: {}, prevState: AppState) {\n    if (prevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  handleContextMenu = (event: React.MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName, currentTime } = this.state;\n\n    return (\n      <div\n        className=\"App\"\n        role=\"button\"\n        tabIndex={0}\n        onContextMenu={this.handleContextMenu}\n        onClick={this.handleClick}\n        onKeyDown={(event) => {\n          if (event.key === 'Enter') {\n            this.handleClick();\n          }\n        }}\n      >\n        <h1>React clock</h1>\n        {hasClock && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">{clockName}</strong>\n            {' time is '}\n            <span className=\"Clock__time\">{currentTime}</span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}